@mixin link-base {
  color: var(--colour-link);
  text-decoration: underline;

  &:hover {
    color: var(--colour-link-hover);
  }

  &:active {
    color: var(--colour-link-active);
  }

  &:focus {
    color: var(--colour-link-focus);
    outline-color: var(--colour-link-focus-outline);
    outline-offset: calc(0.5 * var(--space-unit));
  }

  [disabled],
  &:not([href]) {
    color: var(--colour-link-disabled);
  }
}

@mixin link-inherit {
  color: inherit;

  @include hocus {
    color: inherit;
  }
}

/**
 * Helper mixins - to reduce the animated-link mixin size and can be reused,
 *
 * i.e. hover-underline adds styles to a title after the image was hovered
 */
@mixin default-underline($height: 3px, $underline-colour: var(--colour-grey-80)) {
  --transition-duration-link: 0.3s;
  --transition-timing-function: ease-in-out;

  background-image: linear-gradient($underline-colour, $underline-colour), linear-gradient(transparent, transparent);
  background-position: left calc(100% - #{$height});
  background-repeat: no-repeat;
  background-size: 100% 1px, 0 $height;
  padding-bottom: 6px;

  transition: var(--transition-duration-link) var(--transition-timing-function);
  transition-property: background-size;
}

@mixin hover-underline($height: 3px, $hover-colour: var(--colour-amber-30)) {
  background-image: linear-gradient(transparent, transparent), linear-gradient($hover-colour, $hover-colour);
  background-position: left calc(100% - 1px);
  background-size: 0 1px, 100% $height;
}

/**
 * Generates a style where a horizontal line displays
 * beneath an element and changes to another colour on hover with a transition.
 *
 * Usage:
 * For HTML <a class="cc-cta-link" href=''><span class="btn__text">Text</span></a>
 *
 * .cc-cta-link {
 *   @include animated-link($child-selector: ".btn__text");
 * }
 * or
 * a {
 *  @include animated-link;
 * }
 *
 * @param {Int} $height - height of the "underline" on hover
 * @param {string} $hover-colour - colour of the "underline" on hover
 * @param {string} $underline-colour - colour of the "underline" (default state)
 * @param {string} $child-selector - selector to apply anchor styles
 */
@mixin animated-link(
  $height: 3px,
  $hover-colour: var(--colour-amber-30),
  $underline-colour: var(--colour-grey-80),
  $child-selector: null
) {
  @include link-base;

  text-decoration: none;

  &:hover,
  &:focus {
    text-decoration: none;
  }

  @if ($child-selector) {
    #{$child-selector} {
      @include default-underline($height, $underline-colour);
    }

    &:hover #{$child-selector} {
      @include hover-underline($height, $hover-colour);
    }
  }

  @else {
    @include default-underline($height, $underline-colour);

    &:hover {
      @include hover-underline($height, $hover-colour);
    }
  }
}
